---

- name: Add 16.04 Security repo and git toolsets ubuntu repositories
  apt_repository: repo='{{ item }}' update_cache=yes
  with_items:
    - ppa:git-core/ppa
    - deb http://security.ubuntu.com/ubuntu xenial-security main universe
    - ppa:brightbox/ruby-ng

- name: Install rump and unikernel dev tooling, was 4.4 now 4.6
  apt: name={{ item }} state=present
  with_items:
      - qemu
      - libxen-dev
      - libxen-4.6

- name: Create user bin directory
  file: path=/home/{{user}}/bin state=directory

- name: Check if Go 1.10.3 is installed
  shell: go version
  register: go_version
  failed_when: false
  changed_when: false

- name: Download Go 1.10.3
  get_url:
      url: https://storage.googleapis.com/golang/go1.10.3.linux-amd64.tar.gz
      dest: /tmp/go1.10.3.linux-amd64.tar.gz
      force: true
  when: go_version.stdout.find('go version go1.10.3 linux/amd64') == -1

- name: Clean artifact path
  file:
    state: absent
    path: "/home/{{user}}/go"
  when: go_version.stdout.find('go version go1.10.3 linux/amd64') == -1

- name: Check for clean go directory
  stat: 
      path: "/home/{{user}}/go"
  register: goPath

- name: Install Go 1.10.3 locally for user {{user}}
  unarchive:
    src: /tmp/go1.10.3.linux-amd64.tar.gz
    dest: "/home/{{user}}"
    copy: no
  when: not goPath.stat.exists

- name: add the gorun command as a binary file handled for Linux
  lineinfile: dest=/proc/sys/fs/binfmt_misc/register line=":golang:E::go::/usr/local/bin/gorun:OC" regexp="^:golang:E::go::/usr/local/bin/gorun:OC"

- name: Check if RipGrep 0.8.1 is installed
  shell: rg --version
  register: rg_version
  ignore_errors: yes
  failed_when: false
  changed_when: false

- name: Download RipGrep
  get_url: 
    url: https://github.com/BurntSushi/ripgrep/releases/download/0.8.1/ripgrep-0.8.1-x86_64-unknown-linux-musl.tar.gz
    dest: /tmp/ripgrep-0.8.1-x86_64-unknown-linux-musl.tar.gz
    force: true
  when: rg_version.stdout.find('ripgrep 0.8.1') == -1

- name: Unpack RipGrep
  unarchive:
    src: /tmp/ripgrep-0.8.1-x86_64-unknown-linux-musl.tar.gz
    dest: /tmp
    copy: no
    creates: "/tmp/ripgrep-0.8.1-x86_64-unknown-linux-musl/rg"
  when: rg_version.stdout.find('ripgrep 0.8.1') == -1

- name: Install RipGrep to user {{user}} bin
  command: mv -f /tmp/ripgrep-0.8.1-x86_64-unknown-linux-musl/rg /home/{{user}}/bin/rg
  when: rg_version.stdout.find('ripgrep 0.8.1') == -1

- name: Check if direnv 2.17.0 is installed
  shell: direnv version
  register: direnv_version
  ignore_errors: yes
  failed_when: false
  changed_when: false

- name: Download direnv 2.17.0
  get_url:
    url: https://github.com/direnv/direnv/releases/download/v2.17.0/direnv.linux-amd64
    dest: /home/{{user}}/bin/direnv
    force: true
  when: direnv_version.stdout.find('2.17.0') == -1

- name: Enable direnv
  file: dest=/home/{{user}}/bin/direnv mode=a+x
  when: direnv_version.stdout.find('2.17.0') == -1

- name: Install dev tooling
  apt: name={{ item }} update_cache=yes state=present
  with_items:
    - git-extras
    - libboost-dev 
    - autoconf 
    - automake 
    - libtool
    - libssl-dev
    - pkg-config
    - bison
    - g++
    - clang-format-3.6
    - flex 
    - default-jdk 
    - ant
    - mercurial
    - ncurses-dev
    - libpcre3-dev
    - libgpm-dev
    - libsqlite3-dev
    - libreadline6
    - libreadline6-dev
    - libssl-dev
    - libcurl4-gnutls-dev
    - libexpat1-dev
    - exuberant-ctags
    - x11-xserver-utils
    - gettext
    - unzip
    - python-pygments
    - graphviz
    - pandoc
    - xclip
    - xsel
    - jq
    - grc

- name: Install thrift development tools for C++
  apt: name={{ item }} update_cache=yes state=present
  with_items:
    - automake
    - bison
    - flex
    - g++
    - git
    - libboost1.58-all-dev
    - libevent-dev
    - libssl-dev
    - libtool
    - make
    - pkg-config

- name: Install ruby development tools
  apt: name={{ item }} update_cache=yes state=present
  with_items:
    - ruby2.2
    - ruby2.2-dev

- name: Install Bundler
  command: bash -lc "gem install travis -v 1.8.6 --no-rdoc --no-ri"
