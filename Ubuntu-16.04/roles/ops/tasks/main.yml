---
- name: Add development tool sets ubuntu repositories
  apt_repository: repo='{{ item }}' update_cache=yes
  with_items:
    - ppa:git-core/ppa
    - ppa:gnome-terminator
    - ppa:pi-rho/dev
    - ppa:neovim-ppa/unstable
    - ppa:webupd8team/sublime-text-2
    - ppa:webupd8team/sublime-text-3
    - deb [trusted=yes] https://repo.iovisor.org/apt/xenial xenial-nightly main

- name: Install core tooling for admin and access
  apt: name={{ item }} state=present
  with_items:
    - xauth
    - rsync
    - most
    - tree
    - unzip
    - mosh
    - wget
    - curl
    - rxvt-unicode-256color
    - terminator
    - vim
    - python-dev
    - python-pip
    - python3-dev
    - python3-pip
    - golang-1.10
    - cloud-image-utils
    - neovim
    - sublime-text-installer
    - tmux
    - multitail
    - apache2-utils
    - htop
    - glances
    - nmon
    - git
    - git-flow
    - dfc
    - parallel
    - screenfetch
    - sysdig
    - libnotify4
    - gvfs-bin
    - xdg-utils
    - bcc-tools
    - libhttp-parser2.1

- name: Check if lnav 0.8.2 is installed
  shell: lnav -h
  register: lnav_version
  failed_when: false
  changed_when: false

- name: Download lnav at version 0.8.2
  get_url:
    url: "https://github.com/tstack/lnav/releases/download/v0.8.2/lnav-0.8.2-linux-64bit.zip"
    dest: "/tmp/lnav-0.8.2-linux-64bit.zip"
  when: lnav_version.stdout.find("lnav 0.8.2") == -1 or lnav_version.rc != 0

- name: Extract lnav archive at version 0.8.2
  unarchive: 
    src: /tmp/lnav-0.8.2-linux-64bit.zip
    dest: /tmp 
    copy: no
  when: lnav_version.stdout.find("lnav 0.8.2") == -1 or lnav_version.rc != 0

- name: Copy extracted lnav 0.8.2 executable to /usr/local/bin
  command: mv -f /tmp/lnav-0.8.2/lnav /usr/local/bin/lnav
  when: lnav_version.stdout.find("lnav 0.8.2") == -1 or lnav_version.rc != 0

- name: Check if exa 0.8.0 is installed
  shell: exa --version
  register: exa_version
  failed_when: false
  changed_when: false

- name: Download Rust based exa 0.8.0
  get_url:
    url: "https://github.com/ogham/exa/releases/download/v0.8.0/exa-linux-x86_64-0.8.0.zip"
    dest: "/tmp/exa.zip"
    force: yes
  when: exa_version.stdout.find('exa 0.8.0') == -1 or exa_version.rc != 0

- name: Extract exa version 0.8.0
  unarchive: src=/tmp/exa.zip dest=/tmp copy=no creates=/tmp/exa-linux-x86_64
  when: exa_version.stdout.find('exa 0.8.0') == -1 or exa_version.rc != 0

- name: Copy extracted exa executable to /usr/local/bin
  command: mv /tmp/exa-linux-x86_64 /usr/local/bin/exa
  when: exa_version.stdout.find('exa 0.8.0') == -1 or exa_version.rc != 0

- name: Make Rust based exa executable
  file: path=/usr/local/bin/exa mode="u+x,g+x,o+x"
  when: exa_version.stdout.find('exa 0.8.0') == -1 or exa_version.rc != 0

- name: Check if sift 0.9.0 is installed
  shell: sift --version
  register: sift_version
  failed_when: false
  changed_when: false

- name: Download sift 0.9.0
  get_url: 
    url: "https://sift-tool.org/downloads/sift/sift_0.9.0_linux_amd64.tar.gz"
    dest: "/tmp/sift.tar.gz"
    force: true
  when: sift_version.stdout.find('sift 0.9.0') == -1 or sift_version.rc != 0

- name: Extract sift version 0.9.0
  unarchive: 
    src: /tmp/sift.tar.gz
    dest: /tmp
    copy: no
  when: sift_version.stdout.find('sift 0.9.0') == -1 or sift_version.rc != 0

- name: Copy extracted sift executable to /usr/local/bin
  command: mv -f /tmp/sift_0.9.0_linux_amd64/sift /usr/local/bin/sift
  when: sift_version.stdout.find('sift 0.9.0') == -1 or sift_version.rc != 0

#- name: Check if atom is installed
#  command: dpkg-query -W atom
#  register: atom_check_deb
#  failed_when: atom_check_deb.rc > 1
#  changed_when: atom_check_deb.rc == 1

#- name: Download Atom
#  get_url: 
#    url="https://github.com/atom/atom/releases/download/v1.8.0/atom-amd64.deb"
#    dest="/tmp/atom-amd64.deb"
#  when: atom_check_deb.rc == 1

#- name: Install Atom
#  apt: deb="/tmp/atom-amd64.deb"
#  become: true
#  when: atom_check_deb.rc == 1

