---
- name: Create /usr/local/bin if it does not exist
  ansible.builtin.file:
    path: /usr/local/bin
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Remove Use DNS
  lineinfile:
    state=absent
    dest=/etc/ssh/sshd_config
    line='UseDNS no'
  tags: install

- name: Test if the cloud instance config file is present for Ubuntu
  stat: path=/etc/cloud/cloud.cfg
  register: cloud

- name: Maintain hostname after reboots within cloud environments
  lineinfile: 
    path: /etc/cloud/cloud.cfg
    state: present
    regexp: '^preserve_hostname:'
    line: 'preserve_hostname: true'
  tags: install
  when: cloud.stat.exists

- name: Install sudo (Debian only)
  apt: pkg=sudo state=present
  when: ansible_distribution == 'Debian'

- name: Install gnupg
  apt: pkg=gnupg state=present

- name: set Ubuntu keyserver
  apt_key: keyserver=keyserver.ubuntu.com id=36A1D7869245C8950F966E92D8576A8BA88D21E9

#- name: Add the Ubuntu security repo
  #apt_repository:
    #repo: deb http://security.ubuntu.com/ubuntu {{ansible_distribution_release}}-security main universe
  #when: (ansible_distribution == "Ubuntu")
# and (ansible_distribution_major_version == "14")

- name: Update package manager
  apt: update_cache=yes
  become: true
  become_user: root
  register: package_debug

- name: Install LSB tools
  apt: name="{{ items }}" state=present
  vars:
    items:
    - lsb-core
  when: ansible_architecture == "x86_64" and (ansible_distribution == "Ubuntu") and ( ansible_distribution_major_version | int < 23)

- name: Install LSB tools
  apt: name="{{ items }}" state=present
  vars:
    items:
    - lsb-base
    - lsb-release
  when: ansible_architecture == "x86_64" and (ansible_distribution == "Ubuntu") and ( ansible_distribution_major_version | int >= 23)

- name: Install NTP server
  apt: name="{{ items }}" state=present
  vars:
    items:
    - ntp
    - aptitude

- name: Upgrade apt
  apt: upgrade=full
  become: true
